[{"id":"bc774fdd11fa6d051ebe88dab8157d32","title":"kaggle 泰坦尼克号生存预测","content":"目标使用泰坦尼克号乘客数据（名字，年龄，票价等）预测谁将存活或者死去。\n数据在数据中有三份文件：(1) train.csv, (2) test.csv, and (3) gender_submission.csv.\n(1) train.csvtrain.csv 包含机上乘客子集的详细信息（确切地说是891名乘客——每个乘客在表中都有不同的一行。\n第二列中的值（ “幸存” ）可用于确定每个乘客是否幸存：\n\n如果是“1”，乘客就活了下来。\n如果是“0”，则乘客死亡。\n\n例如，train.csv 中列出的第一位乘客是 Owen Harris Braund 先生。他在泰坦尼克号上去世时22岁。\n(2) test.csv使用您在 train.csv 中训练的模型，预测船上其他418名乘客（在 test.csv 中）是否幸存。\n(3) gender_submission.csv提供了gender_submition.csv文件作为示例，该文件显示了您应该如何构建预测。据预测，所有女性乘客幸存，所有男性乘客死亡。你关于生存的假设可能会有所不同，这将导致不同的提交文件。但是，就像这个文件一样，您提交的文件应该有：\n\nPassengerId&quot;； 列，其中包含test.csv中每个乘客的ID。\n幸存的&quot;； 列（您将创建！），其中“1”表示您认为乘客幸存的行，“0”表示您预测乘客死亡的行。\n\n过程代码\n导入所需要的库和训练集：\n\n123import pandas as pdtrain_data = pd.read_csv(&#x27;data/titanic/train.csv&#x27;)train_data.head()\n\n输出：\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    .dataframe thead th {\n        text-align: right;\n    }\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S\n    \n  \n\n\n\n\n导入测试集：\n\n12train_data = pd.read_csv(&#x27;data/titanic/train.csv&#x27;)train_data.head()\n\n输出：\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    .dataframe thead th {\n        text-align: right;\n    }\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S\n    \n  \n\n\n\n\n男性存活率：\n\n1234men = train_data.loc[train_data.Sex == &#x27;male&#x27;][&quot;Survived&quot;]rate_men = sum(men)/len(men)print(&quot;% of men who survived:&quot;, rate_men)\n\n输出：\n\n% of men who survived: 0.18890814558058924\n\n\n在有兄弟姐妹的男性中，男性的存活率：\n\n1234men_sibsb_survived = train_data.loc[(train_data[&#x27;Sex&#x27;] == &#x27;male&#x27;) &amp; (train_data[&#x27;SibSp&#x27;] == 1), &#x27;Survived&#x27;]men = train_data.loc[(train_data.Sex == &#x27;male&#x27;) &amp; (train_data[&#x27;SibSp&#x27;] == 1)][&quot;Survived&quot;]men_sibsb = sum(men_sibsb_survived)/len(men)print(&quot;有兄弟姐妹的男性中，男性存活率&quot;, men_sibsb)\n\n输出：\n\n有兄弟姐妹的男性中，男性存活率： 0.3106796116504854\n\n\n在有父母和孩子的男性中，男性存活率：\n\n1234men_parch_survived = train_data.loc[(train_data[&#x27;Sex&#x27;] == &#x27;male&#x27;) &amp; (train_data[&#x27;Parch&#x27;] == 1), &#x27;Survived&#x27;]men = train_data.loc[(train_data.Sex == &#x27;male&#x27;) &amp; (train_data[&#x27;Parch&#x27;] == 1)][&quot;Survived&quot;]men_parch = sum(men_sibsb_survived)/len(men)print(&quot;有父母孩子的男性中，男性存活率：&quot;, men_parch)\n\n输出：\n\n有父母孩子的男性中，男性存活率： 0.5517241379310345\n\n\n女性存活率：\n\n123women = train_data.loc[train_data.Sex == &#x27;female&#x27;][&quot;Survived&quot;]rate_women = sum(women)/len(women)print(&quot;% of women who survived:&quot;, rate_women)\n\n输出：\n\n% of women who survived: 0.7420382165605095\n\n\n使用随机森林模型对结果进行预测，选用的特征是船票等级，性别，是否有配偶在船上，是否有父母在船上。\n\n123456789101112131415from sklearn.ensemble import RandomForestClassifiery = train_data[&quot;Survived&quot;]features = [&quot;Pclass&quot;, &quot;Sex&quot;, &quot;SibSp&quot;, &quot;Parch&quot;]X = pd.get_dummies(train_data[features])X_test = pd.get_dummies(test_data[features])model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)model.fit(X, y)predictions = model.predict(X_test)output = pd.DataFrame(&#123;&#x27;PassengerId&#x27;: test_data.PassengerId, &#x27;Survived&#x27;: predictions&#125;)output.to_csv(&#x27;submission.csv&#x27;, index=False)print(&quot;Your submission was successfully saved!&quot;)\n\n\n准确率计算：\n\n123456789from sklearn.metrics import accuracy_scoretrue_data = pd.read_csv(&#x27;data/titanic/gender_submission.csv&#x27;)y_true = true_data.Survivedy_pred = predictions# 计算准确率accuracy = accuracy_score(y_true, y_pred)print(f&#x27;Accuracy: &#123;accuracy&#125;&#x27;)\n\n输出：\n\nAccuracy: 0.9712918660287081\n\n模型随机森林模型随机森林模型在分类和回归任务上都有优秀的表现。但是如果要理解随机森林模型的具体原理，这对初学者来说颇具难度，这里面设计到了大量的数学运算，具体步骤参考最后的引文资料，本文尽量以最简单的概念来让你对其有一定的了解。\n假设你要判断一些戴着面具的孩子的性别，你可以对他们提出问题，根据他们的回答进行判断，你能提出问题只包括是否喜欢运动，是否喜欢电脑游戏，是否喜欢粉色，是否喜欢甜食等等。\n为了使你需要提问的次数最少，判断更准确，那么你需要准备好合适的问题和问题的次序。\n在正式的测试前，允许你先刷一会的题。这就对应了模型中训练的过程。\n首先，你找来100个人，其中有50个男生和50个女生站在一起，你对他们喊道：喜欢甜食的站在左边，不喜欢的人站在右边。\n这时候70个人站在了左边，30个站在了右边。但是别高兴太早，你又发现70个中男生占一半，女生占一半，另外30个也是一样。\n\n那么看来，对于在吃甜食这一事件上，性别不同不会有什么特殊偏好，所以在分辨男女这件事上，是否喜欢甜食，不是一个好问题。\n所以你让男女生又站了回来，换把问题换成了是否喜欢打电脑游戏。\n这时候60个人站在了左边，40个站在了右边，但是60个人之中有40个是男生，20个是女生，那么40个中30个是女生，10个是男生。\n\n很明显，在左边里面，男生的比例明显增加，在右边里面，女生比例明显增加。\n所以在是否喜欢玩电脑游戏这个问题，有效区分这个人是男生和女生，所以这是一个好问题。\n当然，你希望准确率可以更高一些，那么你可以对左边右边继续问问题，左右边可以是相同的问题，也可以是不同问题。\n知道最后不断划分，你就可以通过一系列问题判断出这个人大概率是男生还是女生，这时候这系列问题被称为树。\n但是不要忘了，这是随机森林模型，一棵树怎么可以称之为森林呢。但是你可以重复上述步骤，从人群中选择不同样本集合，选择不同问题训练出不同的树。\n不同树可能对同一个样本给出不同答案，这时候我们应该相信哪棵树的答案?\n投票，哪个答案给出的多，那我们就信哪个答案。\n\n那再实际的随机森林模型中，对于问题的选择，通常采用信息增益、增益率或者基尼指数对所选参量进行判断，在选择一个参量后，群体分支几个部分，每个部分中某一类数量占比特别高，其它类别总占比小，我们就称这个参量的信息增益大，可以看看上面我给你举的例子，不同问题代表不同参量，好的参量最后造成了左右队列中男女比例明显的变化。\n同时，为了防止过拟合，还需要对模型进行剪支处理。这些概念具体请看我后面给你的参考文献。\n以上，就是我对随机森林模型粗浅的了解，欢迎各位的指正。\n参考文献\nTitanic - Machine Learning from Disaster | Kaggle\n随机森林详解（从决策树理解随机森林） - 知乎 (zhihu.com)\ndatawhalechina&#x2F;pumpkin-book: 《机器学习》（西瓜书）公式详解 (github.com)\n《机器学习公式详解第2版 周志华西瓜书《机器学习》伴侣书南瓜书新版上市！了解人工智能ChatGpt底层数学逻辑！》(谢文睿)【简介_书评_在线阅读】 - 当当图书 (dangdang.com)\n\n","slug":"kaggle 泰坦尼克号生存预测","date":"2024-01-15T12:17:05.000Z","categories_index":"","tags_index":"","author_index":"wiselisx"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-01-13T14:08:17.376Z","categories_index":"","tags_index":"","author_index":"wiselisx"}]